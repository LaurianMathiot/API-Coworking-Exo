// NODE --
// Installer les dépendances
npm init 
npm install nodemon
npm install express
npm install sequelize
npm install mariadb
npm install morgan

// Modifier le script du package.json pour utiliser nodemon
// Ajouter "start": "nodemon app.js" dans la section "scripts"

// 1er -> Créez le dossier DB qui contiendra un fichier nommé sequelize.js
//--------------------------------------------------------------------------------
// Une fois Sequelize installé, établir la connexion avec la base de données Coworkings
const { Sequelize } = require('sequelize');
const sequelize = new Sequelize("coworkings", "root", "", {
  host: "localhost",
  dialect: "mariadb",
  logging: false,
});

//--------------------------------------------------------------------------------
// Authentification à la base de données
sequelize.authenticate()
  .then(() => {
    console.log(`La connexion à la base de données a été établie avec succès.`);
  })
  .catch((error) => {
    console.error(`Impossible de se connecter à la base de données : ${error}`);
  });

//--------------------------------------------------------------------------------

// Créer un dossier "models" qui comprendra les modèles de tables
module.exports = (sequelize, DataTypes) => {
  return sequelize.define("city", {
    city: DataTypes.STRING,
    code_postal: DataTypes.INTEGER,
  });
};

//--------------------------------------------------------------------------------

// Appeler le modèle et stocker le résultat dans une constante
const modelCity = require('./models/city');

// Exporter les modèles par la suite
module.exports = {
  modelCity,
};

//--------------------------------------------------------------------------------
// Initialiser la synchronisation des modèles avec la base de données
const initDataBase = () => {
  sequelize.sync({ force: true })
    .then(() => {
      console.log("La synchronisation avec la base de données a été effectuée avec succès.");
    })
    .catch((error) => {
      console.error(`Erreur lors de la synchronisation avec la base de données : ${error}`);
    });
};

// Appeler initDataBase dans app.js pour effectuer la synchronisation
initDataBase();

//--------------------------------------------------------------------------------

// 2 -> Créer un dossier "controllers" -> Importer le modèle dans un fichier nommé "coworkingController"
const { modelCity } = require("../dataBase/sequelize");

//--------------------------------------------------------------------------------

// Créer une fonction pour le contrôleur dans le fichier "coworkingController.js"
exports.findAllCoworkingByPK = (req, res) => {
  // Votre code pour trouver tous les espaces de coworking par clé primaire ici
};

//--------------------------------------------------------------------------------

// Créer un dossier "routes" qui contiendra les fichiers de routage
const express = require('express');
const router = express.Router();

// Importer le contrôleur des espaces de coworking
const coworkingController = require("../controllers/coworkingController");

// Définir les routes et appeler les contrôleurs appropriés
router.route("/").get(coworkingController.findAllCoworkingByPK);

// Exporter le router
module.exports = router;

//--------------------------------------------------------------------------------

// Dans app.js, écouter la route indiquée
const coworkingRouter = require('./routes/coworking');

// Utiliser la route "coworking" pour les requêtes commençant par "/api/coworkings"
app.use("/api/coworkings", coworkingRouter);
